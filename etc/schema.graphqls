type Query {
    productById (
        id: Int! @doc(description: "Product ID")
    ): ProductInterface
    @resolver(class: "Yireo\\AdditionalEndpointsGraphQl\\Model\\Resolver\\ProductById")
    @doc(description: "Load a product by its ID")

    productBySku (
        sku: String! @doc(description: "Product SKU")
    ): ProductInterface
    @resolver(class: "Yireo\\AdditionalEndpointsGraphQl\\Model\\Resolver\\ProductBySku")
    @doc(description: "Load a product by its SKU")

    categoryById (
        id: Int! @doc(description: "Category ID")
    ): CategoryInterface
    @resolver(class: "Yireo\\AdditionalEndpointsGraphQl\\Model\\Resolver\\CategoryById")
    @doc(description: "Load a category by its ID")

    cmsBlock (
        identifier: String! @doc(description: "CMS Block identifier")
    ): CmsBlock
    @resolver(class: "Yireo\\AdditionalEndpointsGraphQl\\Model\\Resolver\\CmsBlock")
    @doc(description: "Load a CMS block by its identifier")

    cmsWidget (
        id: String! @doc(description: "CMS Widget ID")
    ): CmsWidget
    @resolver(class: "Yireo\\AdditionalEndpointsGraphQl\\Model\\Resolver\\CmsWidget")
    @doc(description: "Load a CMS widget by its identifier")

    cmsPages: CmsPages
    @resolver(class: "Yireo\\AdditionalEndpointsGraphQl\\Model\\Resolver\\CmsPages")
    @doc(description: "Load all CMS pages")

    validateCustomerToken(
        token: String! @doc(description: "Customer token")
    ): Boolean
    @resolver(class: "Yireo\\AdditionalEndpointsGraphQl\\Model\\Resolver\\ValidateCustomerToken")
    @doc(description: "Validate customer token")
}

type CmsPages @doc(description: "CMS pages information") {
    items: [CmsPage] @doc(description: "An array of CMS pages")
}

type CmsWidget @doc(description: "CMS widget") {
    id: String @doc(description: "Identifier of the CMS widget")
    title: String @doc(description: "Identifier of the CMS widget")
    html: String @doc(description: "HTML provided by CMS widget")
    parameters: [CmsWidgetOption] @doc(description: "An array of CMS widget options")
}

type CmsWidgetOption @doc(description: "CMS widget option") {
    name: String @doc(description: "Name of the CMS widget option")
    value: String @doc(description: "Mixed value of the CMS widget option")
}
